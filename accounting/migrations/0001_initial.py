# Generated by Django 4.2.11 on 2025-06-16 16:17

from decimal import Decimal
import django.core.validators
from django.db import migrations, models
import djmoney.models.fields
import uuid


class Migration(migrations.Migration):

    initial = True

    dependencies = [
    ]

    operations = [
        migrations.CreateModel(
            name='Account',
            fields=[
                ('id', models.UUIDField(default=uuid.uuid4, editable=False, primary_key=True, serialize=False)),
                ('created', models.DateTimeField(auto_now_add=True)),
                ('updated', models.DateTimeField(auto_now=True)),
                ('is_active', models.BooleanField(default=True)),
                ('code', models.CharField(max_length=50)),
                ('name', models.CharField(max_length=200)),
                ('description', models.TextField(blank=True)),
                ('is_summary', models.BooleanField(default=False, help_text='Summary account (no postings)')),
                ('is_detail', models.BooleanField(default=True, help_text='Detail account (allows postings)')),
                ('is_bank_account', models.BooleanField(default=False)),
                ('is_cash_account', models.BooleanField(default=False)),
                ('is_current', models.BooleanField(default=True, help_text='Current vs Non-current classification')),
                ('requires_1099', models.BooleanField(default=False, help_text='Requires 1099 reporting')),
                ('require_budget', models.BooleanField(default=False)),
                ('allow_negative', models.BooleanField(default=True)),
            ],
            options={
                'ordering': ['chart_of_accounts', 'code'],
            },
        ),
        migrations.CreateModel(
            name='AccountType',
            fields=[
                ('id', models.UUIDField(default=uuid.uuid4, editable=False, primary_key=True, serialize=False)),
                ('created', models.DateTimeField(auto_now_add=True)),
                ('updated', models.DateTimeField(auto_now=True)),
                ('is_active', models.BooleanField(default=True)),
                ('name', models.CharField(max_length=100)),
                ('category', models.CharField(choices=[('asset', 'Asset'), ('liability', 'Liability'), ('equity', 'Equity'), ('revenue', 'Revenue'), ('expense', 'Expense'), ('contra', 'Contra Account')], max_length=20)),
                ('balance_type', models.CharField(choices=[('debit', 'Debit'), ('credit', 'Credit')], max_length=10)),
                ('description', models.TextField(blank=True)),
                ('show_in_balance_sheet', models.BooleanField(default=False)),
                ('show_in_income_statement', models.BooleanField(default=False)),
                ('show_in_cash_flow', models.BooleanField(default=False)),
            ],
            options={
                'ordering': ['category', 'name'],
            },
        ),
        migrations.CreateModel(
            name='ChartOfAccounts',
            fields=[
                ('id', models.UUIDField(default=uuid.uuid4, editable=False, primary_key=True, serialize=False)),
                ('created', models.DateTimeField(auto_now_add=True)),
                ('updated', models.DateTimeField(auto_now=True)),
                ('is_active', models.BooleanField(default=True)),
                ('name', models.CharField(max_length=200)),
                ('description', models.TextField(blank=True)),
            ],
            options={
                'verbose_name_plural': 'Charts of Accounts',
                'ordering': ['organization', 'name'],
            },
        ),
        migrations.CreateModel(
            name='FiscalYear',
            fields=[
                ('id', models.UUIDField(default=uuid.uuid4, editable=False, primary_key=True, serialize=False)),
                ('created', models.DateTimeField(auto_now_add=True)),
                ('updated', models.DateTimeField(auto_now=True)),
                ('is_active', models.BooleanField(default=True)),
                ('name', models.CharField(max_length=50)),
                ('start_date', models.DateField()),
                ('end_date', models.DateField()),
                ('is_current', models.BooleanField(default=False)),
                ('is_closed', models.BooleanField(default=False)),
            ],
            options={
                'ordering': ['-start_date'],
            },
        ),
        migrations.CreateModel(
            name='Journal',
            fields=[
                ('id', models.UUIDField(default=uuid.uuid4, editable=False, primary_key=True, serialize=False)),
                ('created', models.DateTimeField(auto_now_add=True)),
                ('updated', models.DateTimeField(auto_now=True)),
                ('is_active', models.BooleanField(default=True)),
                ('document_no', models.CharField(max_length=50)),
                ('description', models.TextField()),
                ('journal_type', models.CharField(choices=[('manual', 'Manual Entry'), ('sales', 'Sales'), ('purchase', 'Purchase'), ('cash', 'Cash Receipt/Payment'), ('bank', 'Bank Statement'), ('payroll', 'Payroll'), ('adjustment', 'Adjustment'), ('closing', 'Closing Entry'), ('allocation', 'Payment Allocation')], default='manual', max_length=20)),
                ('accounting_date', models.DateField()),
                ('document_date', models.DateField()),
                ('exchange_rate', models.DecimalField(decimal_places=6, default=1, max_digits=12)),
                ('total_debit_currency', djmoney.models.fields.CurrencyField(choices=[('GBP', 'British Pound'), ('CAD', 'Canadian Dollar'), ('EUR', 'Euro'), ('USD', 'US Dollar')], default='USD', editable=False, max_length=3)),
                ('total_debit', djmoney.models.fields.MoneyField(decimal_places=2, default=Decimal('0'), max_digits=15)),
                ('total_credit_currency', djmoney.models.fields.CurrencyField(choices=[('GBP', 'British Pound'), ('CAD', 'Canadian Dollar'), ('EUR', 'Euro'), ('USD', 'US Dollar')], default='USD', editable=False, max_length=3)),
                ('total_credit', djmoney.models.fields.MoneyField(decimal_places=2, default=Decimal('0'), max_digits=15)),
                ('is_approved', models.BooleanField(default=False)),
                ('is_posted', models.BooleanField(default=False)),
                ('date_posted', models.DateTimeField(blank=True, null=True)),
                ('source_document_type', models.CharField(blank=True, max_length=50)),
                ('source_document_id', models.UUIDField(blank=True, null=True)),
            ],
            options={
                'ordering': ['-accounting_date', 'document_no'],
            },
        ),
        migrations.CreateModel(
            name='JournalLine',
            fields=[
                ('id', models.UUIDField(default=uuid.uuid4, editable=False, primary_key=True, serialize=False)),
                ('created', models.DateTimeField(auto_now_add=True)),
                ('updated', models.DateTimeField(auto_now=True)),
                ('is_active', models.BooleanField(default=True)),
                ('line_no', models.IntegerField()),
                ('description', models.TextField(blank=True)),
                ('debit_amount_currency', djmoney.models.fields.CurrencyField(choices=[('GBP', 'British Pound'), ('CAD', 'Canadian Dollar'), ('EUR', 'Euro'), ('USD', 'US Dollar')], default='USD', editable=False, max_length=3)),
                ('debit_amount', djmoney.models.fields.MoneyField(decimal_places=2, default=Decimal('0'), max_digits=15)),
                ('credit_amount_currency', djmoney.models.fields.CurrencyField(choices=[('GBP', 'British Pound'), ('CAD', 'Canadian Dollar'), ('EUR', 'Euro'), ('USD', 'US Dollar')], default='USD', editable=False, max_length=3)),
                ('credit_amount', djmoney.models.fields.MoneyField(decimal_places=2, default=Decimal('0'), max_digits=15)),
                ('source_debit_currency', djmoney.models.fields.CurrencyField(choices=[('GBP', 'British Pound'), ('CAD', 'Canadian Dollar'), ('EUR', 'Euro'), ('USD', 'US Dollar')], default='USD', editable=False, max_length=3)),
                ('source_debit', djmoney.models.fields.MoneyField(decimal_places=2, default=Decimal('0'), max_digits=15)),
                ('source_credit_currency', djmoney.models.fields.CurrencyField(choices=[('GBP', 'British Pound'), ('CAD', 'Canadian Dollar'), ('EUR', 'Euro'), ('USD', 'US Dollar')], default='USD', editable=False, max_length=3)),
                ('source_credit', djmoney.models.fields.MoneyField(decimal_places=2, default=Decimal('0'), max_digits=15)),
                ('currency_rate', models.DecimalField(decimal_places=6, default=1, max_digits=12)),
                ('source_table', models.CharField(blank=True, max_length=50)),
                ('source_record_id', models.UUIDField(blank=True, null=True)),
            ],
            options={
                'ordering': ['journal', 'line_no'],
            },
        ),
        migrations.CreateModel(
            name='Period',
            fields=[
                ('id', models.UUIDField(default=uuid.uuid4, editable=False, primary_key=True, serialize=False)),
                ('created', models.DateTimeField(auto_now_add=True)),
                ('updated', models.DateTimeField(auto_now=True)),
                ('is_active', models.BooleanField(default=True)),
                ('name', models.CharField(max_length=50)),
                ('period_type', models.CharField(choices=[('standard', 'Standard Period'), ('adjustment', 'Adjustment Period'), ('opening', 'Opening Period'), ('closing', 'Closing Period')], default='standard', max_length=20)),
                ('start_date', models.DateField()),
                ('end_date', models.DateField()),
                ('period_number', models.IntegerField()),
                ('is_open', models.BooleanField(default=True)),
                ('is_closed', models.BooleanField(default=False)),
                ('date_closed', models.DateTimeField(blank=True, null=True)),
            ],
            options={
                'ordering': ['fiscal_year', 'period_number'],
            },
        ),
        migrations.CreateModel(
            name='Tax',
            fields=[
                ('id', models.UUIDField(default=uuid.uuid4, editable=False, primary_key=True, serialize=False)),
                ('created', models.DateTimeField(auto_now_add=True)),
                ('updated', models.DateTimeField(auto_now=True)),
                ('is_active', models.BooleanField(default=True)),
                ('name', models.CharField(max_length=100)),
                ('description', models.TextField(blank=True)),
                ('tax_type', models.CharField(choices=[('sales', 'Sales Tax'), ('use', 'Use Tax'), ('vat', 'VAT'), ('excise', 'Excise Tax'), ('other', 'Other')], default='sales', max_length=20)),
                ('rate', models.DecimalField(decimal_places=5, max_digits=7, validators=[django.core.validators.MinValueValidator(0), django.core.validators.MaxValueValidator(100)])),
                ('is_percentage', models.BooleanField(default=True)),
                ('jurisdiction', models.CharField(blank=True, help_text='State/County/City', max_length=100)),
                ('tax_authority', models.CharField(blank=True, max_length=200)),
                ('valid_from', models.DateField()),
                ('valid_to', models.DateField(blank=True, null=True)),
            ],
            options={
                'verbose_name_plural': 'Taxes',
                'ordering': ['name'],
            },
        ),
        migrations.CreateModel(
            name='TaxCategory',
            fields=[
                ('id', models.UUIDField(default=uuid.uuid4, editable=False, primary_key=True, serialize=False)),
                ('created', models.DateTimeField(auto_now_add=True)),
                ('updated', models.DateTimeField(auto_now=True)),
                ('is_active', models.BooleanField(default=True)),
                ('name', models.CharField(max_length=100)),
                ('description', models.TextField(blank=True)),
                ('is_default', models.BooleanField(default=False)),
            ],
            options={
                'verbose_name_plural': 'Tax Categories',
                'ordering': ['name'],
            },
        ),
    ]
