# Generated by Django 4.2.11 on 2025-06-16 16:40

from decimal import Decimal
from django.conf import settings
import django.core.validators
from django.db import migrations, models
import django.db.models.deletion
import djmoney.models.fields
import uuid


class Migration(migrations.Migration):

    initial = True

    dependencies = [
        ('core', '0001_initial'),
        migrations.swappable_dependency(settings.AUTH_USER_MODEL),
        ('accounting', '0002_initial'),
    ]

    operations = [
        migrations.CreateModel(
            name='PriceList',
            fields=[
                ('id', models.UUIDField(default=uuid.uuid4, editable=False, primary_key=True, serialize=False)),
                ('created', models.DateTimeField(auto_now_add=True)),
                ('updated', models.DateTimeField(auto_now=True)),
                ('is_active', models.BooleanField(default=True)),
                ('name', models.CharField(max_length=200)),
                ('description', models.TextField(blank=True)),
                ('is_sales_price_list', models.BooleanField(default=True)),
                ('is_purchase_price_list', models.BooleanField(default=False)),
                ('is_default', models.BooleanField(default=False)),
                ('valid_from', models.DateField()),
                ('valid_to', models.DateField(blank=True, null=True)),
                ('created_by', models.ForeignKey(blank=True, null=True, on_delete=django.db.models.deletion.PROTECT, related_name='created_%(class)s', to=settings.AUTH_USER_MODEL)),
                ('currency', models.ForeignKey(on_delete=django.db.models.deletion.PROTECT, to='core.currency')),
                ('organization', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, to='core.organization')),
                ('updated_by', models.ForeignKey(blank=True, null=True, on_delete=django.db.models.deletion.PROTECT, related_name='updated_%(class)s', to=settings.AUTH_USER_MODEL)),
            ],
            options={
                'ordering': ['organization', 'name'],
            },
        ),
        migrations.CreateModel(
            name='PriceListVersion',
            fields=[
                ('id', models.UUIDField(default=uuid.uuid4, editable=False, primary_key=True, serialize=False)),
                ('created', models.DateTimeField(auto_now_add=True)),
                ('updated', models.DateTimeField(auto_now=True)),
                ('is_active', models.BooleanField(default=True)),
                ('name', models.CharField(max_length=200)),
                ('description', models.TextField(blank=True)),
                ('valid_from', models.DateField()),
                ('valid_to', models.DateField(blank=True, null=True)),
                ('created_by', models.ForeignKey(blank=True, null=True, on_delete=django.db.models.deletion.PROTECT, related_name='created_%(class)s', to=settings.AUTH_USER_MODEL)),
                ('price_list', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, related_name='versions', to='inventory.pricelist')),
                ('updated_by', models.ForeignKey(blank=True, null=True, on_delete=django.db.models.deletion.PROTECT, related_name='updated_%(class)s', to=settings.AUTH_USER_MODEL)),
            ],
            options={
                'ordering': ['price_list', '-valid_from'],
            },
        ),
        migrations.CreateModel(
            name='Warehouse',
            fields=[
                ('id', models.UUIDField(default=uuid.uuid4, editable=False, primary_key=True, serialize=False)),
                ('created', models.DateTimeField(auto_now_add=True)),
                ('updated', models.DateTimeField(auto_now=True)),
                ('is_active', models.BooleanField(default=True)),
                ('code', models.CharField(max_length=50, unique=True)),
                ('name', models.CharField(max_length=200)),
                ('description', models.TextField(blank=True)),
                ('address_line1', models.CharField(blank=True, max_length=200)),
                ('address_line2', models.CharField(blank=True, max_length=200)),
                ('city', models.CharField(blank=True, max_length=100)),
                ('state', models.CharField(blank=True, max_length=100)),
                ('postal_code', models.CharField(blank=True, max_length=20)),
                ('country', models.CharField(default='United States', max_length=100)),
                ('is_in_transit', models.BooleanField(default=False, help_text='In-transit warehouse')),
                ('is_quarantine', models.BooleanField(default=False, help_text='Quarantine warehouse')),
                ('created_by', models.ForeignKey(blank=True, null=True, on_delete=django.db.models.deletion.PROTECT, related_name='created_%(class)s', to=settings.AUTH_USER_MODEL)),
                ('organization', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, to='core.organization')),
                ('updated_by', models.ForeignKey(blank=True, null=True, on_delete=django.db.models.deletion.PROTECT, related_name='updated_%(class)s', to=settings.AUTH_USER_MODEL)),
            ],
            options={
                'ordering': ['organization', 'name'],
                'unique_together': {('organization', 'code')},
            },
        ),
        migrations.CreateModel(
            name='ProductCategory',
            fields=[
                ('id', models.UUIDField(default=uuid.uuid4, editable=False, primary_key=True, serialize=False)),
                ('created', models.DateTimeField(auto_now_add=True)),
                ('updated', models.DateTimeField(auto_now=True)),
                ('is_active', models.BooleanField(default=True)),
                ('code', models.CharField(max_length=50, unique=True)),
                ('name', models.CharField(max_length=200)),
                ('description', models.TextField(blank=True)),
                ('asset_account', models.ForeignKey(blank=True, null=True, on_delete=django.db.models.deletion.SET_NULL, related_name='product_categories_asset', to='accounting.account')),
                ('created_by', models.ForeignKey(blank=True, null=True, on_delete=django.db.models.deletion.PROTECT, related_name='created_%(class)s', to=settings.AUTH_USER_MODEL)),
                ('expense_account', models.ForeignKey(blank=True, null=True, on_delete=django.db.models.deletion.SET_NULL, related_name='product_categories_expense', to='accounting.account')),
                ('parent', models.ForeignKey(blank=True, null=True, on_delete=django.db.models.deletion.CASCADE, to='inventory.productcategory')),
                ('revenue_account', models.ForeignKey(blank=True, null=True, on_delete=django.db.models.deletion.SET_NULL, related_name='product_categories_revenue', to='accounting.account')),
                ('updated_by', models.ForeignKey(blank=True, null=True, on_delete=django.db.models.deletion.PROTECT, related_name='updated_%(class)s', to=settings.AUTH_USER_MODEL)),
            ],
            options={
                'verbose_name_plural': 'Product Categories',
                'ordering': ['name'],
            },
        ),
        migrations.CreateModel(
            name='Product',
            fields=[
                ('id', models.UUIDField(default=uuid.uuid4, editable=False, primary_key=True, serialize=False)),
                ('created', models.DateTimeField(auto_now_add=True)),
                ('updated', models.DateTimeField(auto_now=True)),
                ('is_active', models.BooleanField(default=True)),
                ('code', models.CharField(help_text='SKU/Product Code', max_length=50, unique=True)),
                ('name', models.CharField(max_length=200)),
                ('description', models.TextField(blank=True)),
                ('product_type', models.CharField(choices=[('item', 'Item'), ('service', 'Service'), ('resource', 'Resource'), ('expense', 'Expense Type'), ('online', 'Online')], default='item', max_length=20)),
                ('weight', models.DecimalField(decimal_places=3, default=0, max_digits=10, validators=[django.core.validators.MinValueValidator(0)])),
                ('volume', models.DecimalField(decimal_places=3, default=0, max_digits=10, validators=[django.core.validators.MinValueValidator(0)])),
                ('is_sold', models.BooleanField(default=True, help_text='Can be sold')),
                ('is_purchased', models.BooleanField(default=True, help_text='Can be purchased')),
                ('is_stocked', models.BooleanField(default=True, help_text='Inventory tracked')),
                ('is_bill_of_materials', models.BooleanField(default=False, help_text='Has BOM')),
                ('is_verification_required', models.BooleanField(default=False)),
                ('is_drop_ship', models.BooleanField(default=False)),
                ('list_price_currency', djmoney.models.fields.CurrencyField(choices=[('GBP', 'British Pound'), ('CAD', 'Canadian Dollar'), ('EUR', 'Euro'), ('USD', 'US Dollar')], default='USD', editable=False, max_length=3)),
                ('list_price', djmoney.models.fields.MoneyField(decimal_places=2, default=Decimal('0'), max_digits=15)),
                ('standard_cost_currency', djmoney.models.fields.CurrencyField(choices=[('GBP', 'British Pound'), ('CAD', 'Canadian Dollar'), ('EUR', 'Euro'), ('USD', 'US Dollar')], default='USD', editable=False, max_length=3)),
                ('standard_cost', djmoney.models.fields.MoneyField(decimal_places=2, default=Decimal('0'), max_digits=15)),
                ('shelf_life_days', models.IntegerField(blank=True, help_text='Days until expiration', null=True)),
                ('min_stock_level', models.DecimalField(decimal_places=2, default=0, max_digits=12)),
                ('max_stock_level', models.DecimalField(decimal_places=2, default=0, max_digits=12)),
                ('vendor_product_no', models.CharField(blank=True, help_text="Vendor's product number", max_length=100)),
                ('asset_account', models.ForeignKey(blank=True, null=True, on_delete=django.db.models.deletion.SET_NULL, related_name='products_asset', to='accounting.account')),
                ('created_by', models.ForeignKey(blank=True, null=True, on_delete=django.db.models.deletion.PROTECT, related_name='created_%(class)s', to=settings.AUTH_USER_MODEL)),
                ('default_vendor', models.ForeignKey(blank=True, limit_choices_to={'is_vendor': True}, null=True, on_delete=django.db.models.deletion.SET_NULL, to='core.businesspartner')),
                ('expense_account', models.ForeignKey(blank=True, null=True, on_delete=django.db.models.deletion.SET_NULL, related_name='products_expense', to='accounting.account')),
                ('product_category', models.ForeignKey(on_delete=django.db.models.deletion.PROTECT, to='inventory.productcategory')),
                ('revenue_account', models.ForeignKey(blank=True, null=True, on_delete=django.db.models.deletion.SET_NULL, related_name='products_revenue', to='accounting.account')),
                ('tax_category', models.ForeignKey(blank=True, null=True, on_delete=django.db.models.deletion.SET_NULL, to='accounting.taxcategory')),
                ('uom', models.ForeignKey(on_delete=django.db.models.deletion.PROTECT, to='core.unitofmeasure', verbose_name='Unit of Measure')),
                ('updated_by', models.ForeignKey(blank=True, null=True, on_delete=django.db.models.deletion.PROTECT, related_name='updated_%(class)s', to=settings.AUTH_USER_MODEL)),
            ],
            options={
                'ordering': ['code'],
            },
        ),
        migrations.CreateModel(
            name='StorageDetail',
            fields=[
                ('id', models.UUIDField(default=uuid.uuid4, editable=False, primary_key=True, serialize=False)),
                ('created', models.DateTimeField(auto_now_add=True)),
                ('updated', models.DateTimeField(auto_now=True)),
                ('is_active', models.BooleanField(default=True)),
                ('quantity_on_hand', models.DecimalField(decimal_places=2, default=0, max_digits=12)),
                ('quantity_reserved', models.DecimalField(decimal_places=2, default=0, max_digits=12)),
                ('quantity_ordered', models.DecimalField(decimal_places=2, default=0, max_digits=12)),
                ('date_last_inventory', models.DateField(blank=True, null=True)),
                ('created_by', models.ForeignKey(blank=True, null=True, on_delete=django.db.models.deletion.PROTECT, related_name='created_%(class)s', to=settings.AUTH_USER_MODEL)),
                ('product', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, related_name='storage_details', to='inventory.product')),
                ('updated_by', models.ForeignKey(blank=True, null=True, on_delete=django.db.models.deletion.PROTECT, related_name='updated_%(class)s', to=settings.AUTH_USER_MODEL)),
                ('warehouse', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, to='inventory.warehouse')),
            ],
            options={
                'ordering': ['product', 'warehouse'],
                'unique_together': {('product', 'warehouse')},
            },
        ),
        migrations.CreateModel(
            name='ProductPrice',
            fields=[
                ('id', models.UUIDField(default=uuid.uuid4, editable=False, primary_key=True, serialize=False)),
                ('created', models.DateTimeField(auto_now_add=True)),
                ('updated', models.DateTimeField(auto_now=True)),
                ('is_active', models.BooleanField(default=True)),
                ('list_price_currency', djmoney.models.fields.CurrencyField(choices=[('GBP', 'British Pound'), ('CAD', 'Canadian Dollar'), ('EUR', 'Euro'), ('USD', 'US Dollar')], default='USD', editable=False, max_length=3)),
                ('list_price', djmoney.models.fields.MoneyField(decimal_places=2, max_digits=15)),
                ('standard_price_currency', djmoney.models.fields.CurrencyField(choices=[('GBP', 'British Pound'), ('CAD', 'Canadian Dollar'), ('EUR', 'Euro'), ('USD', 'US Dollar')], default='USD', editable=False, max_length=3)),
                ('standard_price', djmoney.models.fields.MoneyField(decimal_places=2, max_digits=15)),
                ('limit_price_currency', djmoney.models.fields.CurrencyField(choices=[('GBP', 'British Pound'), ('CAD', 'Canadian Dollar'), ('EUR', 'Euro'), ('USD', 'US Dollar')], default='USD', editable=False, max_length=3)),
                ('limit_price', djmoney.models.fields.MoneyField(decimal_places=2, default=Decimal('0'), max_digits=15)),
                ('created_by', models.ForeignKey(blank=True, null=True, on_delete=django.db.models.deletion.PROTECT, related_name='created_%(class)s', to=settings.AUTH_USER_MODEL)),
                ('price_list_version', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, related_name='product_prices', to='inventory.pricelistversion')),
                ('product', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, to='inventory.product')),
                ('updated_by', models.ForeignKey(blank=True, null=True, on_delete=django.db.models.deletion.PROTECT, related_name='updated_%(class)s', to=settings.AUTH_USER_MODEL)),
            ],
            options={
                'ordering': ['price_list_version', 'product'],
                'unique_together': {('price_list_version', 'product')},
            },
        ),
    ]
